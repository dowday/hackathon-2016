{"intl":"","src":"require( 'tfw.web-service', function(exports, module) {  require(\"tfw.promise\");\r\nvar Storage = require(\"tfw.storage\");\r\nvar Listeners = require(\"tfw.listeners\");\r\n\r\nvar currentUser = null;\r\nvar changeEvent = new Listeners();\r\nvar config = {url: \"tfw\"};\r\nvar saved = Storage.local.get(\"nigolotua\");\r\nif (Array.isArray(saved)) {\r\n    config.usr = saved[0];\r\n    config.pwd = saved[1];\r\n}\r\n\r\nexports.BAD_ROLE = -1;\r\nexports.BAD_TYPE = -2;\r\nexports.CONNECTION_FAILURE = -3;\r\nexports.MISSING_AUTOLOGIN = -4;\r\nexports.UNKNOWN_USER = -5;\r\nexports.HTTP_ERROR = -6;\r\n\r\nfunction svc(name, args, url) {\r\n    console.info(\"[tfw.web-service]\", name, args);\r\n    return new Promise(\r\n        function(resolve, reject) {\r\n            if (typeof url === 'undefined') url = config.url;\r\n            var that = this;\r\n            var xhr = new XMLHttpRequest({mozSystem: true});\r\n            if ('withCredentials' in xhr) {\r\n                xhr.open(\"POST\", url + \"/svc.php\", true);\r\n                xhr.withCredentials = true;  // Indispensable pour le CORS.\r\n            } else {\r\n                // IE\r\n                xhr = new XDomainRequest();\r\n                xhr.open(\"POST\", url + \"/svc.php\");\r\n            }\r\n            xhr.onload = function() {\r\n                if (xhr.status != 200) {\r\n                    reject(\r\n                        {\r\n                            id: exports.HTTP_ERROR,\r\n                            msg: \"(\" + xhr.status + \") \" + xhr.statusText,\r\n                            status: xhr.status\r\n                        }\r\n                    );\r\n                }\r\n                var value = xhr.responseText;\r\n                if (typeof value === \"string\") {\r\n                    if (value.substr(0, 1) == \"!\") {\r\n                        reject(\r\n                            {\r\n                                id: exports.BAD_ROLE,\r\n                                msg: Error(\"Service \\\"\" + name + \"\\\" needs role \\\"\"\r\n                                           + value.substr(1) + \"\\\"!\")\r\n                            }\r\n                        );\r\n                    }\r\n                    var valueObject;\r\n                    try {\r\n                        valueObject = JSON.parse(value);\r\n                    }\r\n                    catch (ex) {\r\n                        reject(\r\n                            {\r\n                                id: exports.BAD_TYPE,\r\n                                msg: Error(\"Service \\\"\" + name\r\n                                           + \"\\\" should return a valid JSON!\\n\" + ex)\r\n                            }\r\n                        );\r\n                    }\r\n                    resolve(valueObject);\r\n                } else {\r\n                    reject(\r\n                        {\r\n                            id: exports.BAD_TYPE,\r\n                            msg: Error(\"Service \\\"\" + name + \"\\\" should return a string!\")\r\n                        }\r\n                    );\r\n                }\r\n            };\r\n            xhr.onerror = function() {\r\n                reject(\r\n                    {\r\n                        id: exports.HTTP_ERROR,\r\n                        msg: \"(\" + xhr.status + \") \" + xhr.statusText,\r\n                        status: xhr.status\r\n                    }\r\n                );\r\n            };\r\n            var params = \"s=\" + encodeURIComponent(name)\r\n                + \"&i=\" + encodeURIComponent(JSON.stringify(args));\r\n            xhr.setRequestHeader(\r\n                \"Content-type\",\r\n                \"application/x-www-form-urlencoded\");\r\n            xhr.send(params);\r\n        }\r\n    );\r\n}\r\n\r\n/**\r\n * Event fired when login status has changed.\r\n * @type {tfw.listeners}\r\n */\r\nexports.changeEvent = changeEvent;\r\n\r\n/**\r\n * Disconnect current user.\r\n * @return {Promise} A _thenable_ object resolved as soon as the server answered.\r\n */\r\nexports.logout = function() {\r\n    currentUser = null;\r\n    changeEvent.fire();\r\n    Storage.local.set(\"nigolotua\", null);\r\n    return svc(\"tfw.login.Logout\");\r\n};\r\n\r\n/**\r\n * Try to connect a user.\r\n * @param {string} usr Login name.\r\n * @param {string} pwd Password.\r\n * @return {Promise}\r\n *\r\n */\r\nexports.login = function(usr, pwd) {\r\n    if (typeof usr === 'undefined') usr = config.usr;\r\n    if (typeof pwd === 'undefined') pwd = config.pwd;\r\n\r\n    return new Promise(\r\n        function (resolve, reject) {\r\n            if (typeof usr === 'undefined') {\r\n                var autologin = Storage.local.get(\"nigolotua\");\r\n                if (!Array.isArray(autologin)) return reject({id: exports.MISSING_AUTOLOGIN});\r\n                usr = autologin[0];\r\n                pwd = autologin[1];\r\n            }\r\n            Storage.local.set(\"nigolotua\", null);\r\n            svc(\"tfw.login.Challenge\", usr)\r\n                .then(\r\n                    function(code) {\r\n                        // Hashage du mot de passe Ã  l'aide du code.\r\n                        var output = [0, 0, 0, 0,\r\n                                      0, 0, 0, 0,\r\n                                      0, 0, 0, 0,\r\n                                      0, 0, 0, 0],\r\n                        i, j = 0,\r\n                        pass = [],\r\n                        k1, k2, k3;\r\n                        for (i=0 ; i<pwd.length ; i++) {\r\n                            pass.push(pwd.charCodeAt(i));\r\n                        }\r\n                        if (256 % pass.length == 0) {\r\n                            pass.push(0);\r\n                        }\r\n\r\n                        for (i=0 ; i<256 ; i++) {\r\n                            output[i % 16] ^= i + pass[i % pass.length];\r\n                            k1 = code[j++ % code.length]%16;\r\n                            k2 = code[j++ % code.length]%16;\r\n                            k3 = code[j++ % code.length]%16;\r\n                            output[k3] ^= (output[k3] + 16*k2 + k3)%256;\r\n                            output[k2] ^= (output[k1] + output[k3])%256;\r\n                        }\r\n                        return svc(\"tfw.login.Response\", output); //.then(resolve, reject);\r\n                    },\r\n                    reject\r\n                )\r\n                .then(\r\n                    function(user) {\r\n                        if (typeof user === 'object') {\r\n                            currentUser = {\r\n                                data: user,\r\n                                hasRole: function(role) {\r\n                                    for (var i = 0 ; i < user.roles.length ; i++) {\r\n                                        var item = user.roles[i];\r\n                                        if (item == role) return true;\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            };\r\n                            Storage.local.set(\"nigolotua\", [usr, pwd]);\r\n                            changeEvent.fire();\r\n                            resolve(user);\r\n                        } else {\r\n                            currentUser = null;\r\n                            reject({id: exports.UNKNOWN_USER});\r\n                        }\r\n                    },\r\n                    reject\r\n                );\r\n        }\r\n    );\r\n};\r\n\r\n/**\r\n * Call a webservice.\r\n */\r\nexports.get = function(name, args, url) {\r\n    return new Promise(\r\n        function(resolve, reject) {\r\n            svc(name, args, url).then(\r\n                resolve,\r\n                function(err) {\r\n                    if (typeof err === 'object' && err.id == exports.BAD_ROLE) {\r\n                        // Echec de connexion, on retente de se connecter avant d'abandonner.\r\n                        exports.login().then(\r\n                            function() {\r\n                                svc(name, args, url).then(resolve, reject);\r\n                            },\r\n                            reject\r\n                        );\r\n                    } else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    );\r\n};\r\n\r\nexports.user = function() {\r\n    return currentUser;\r\n};\r\n\r\nexports.config = function(key, val) {\r\n    if (typeof val === 'undefined') {\r\n        return config[key];\r\n    }\r\n    config[key] = val;\r\n    return val;\r\n};\r\n\r\n// _Backward compatibility.\r\nif (window.$$) {\r\n    window.$$.service = function (name, args, caller, onSuccess, onError) {\r\n        var p = exports.get(name, args);\r\n        p.then(\r\n            function(value) {\r\n                if (onSuccess) {\r\n                    return caller[onSuccess].call(caller, value);\r\n                }\r\n                return value;\r\n            },\r\n            function(reason) {\r\n                if (onError) {\r\n                    return caller[onError].call(caller, reason);\r\n                }\r\n                return reason;\r\n            }\r\n        );\r\n    };\r\n}\r\n });\r\n","zip":"require(\"tfw.web-service\",function(e,n){function t(n,t,r){return console.info(\"[tfw.web-service]\",n,t),new Promise(function(o,i){\"undefined\"==typeof r&&(r=s.url);var u=new XMLHttpRequest({mozSystem:!0});\"withCredentials\"in u?(u.open(\"POST\",r+\"/svc.php\",!0),u.withCredentials=!0):(u=new XDomainRequest,u.open(\"POST\",r+\"/svc.php\")),u.onload=function(){200!=u.status&&i({id:e.HTTP_ERROR,msg:\"(\"+u.status+\") \"+u.statusText,status:u.status});var t=u.responseText;if(\"string\"==typeof t){\"!\"==t.substr(0,1)&&i({id:e.BAD_ROLE,msg:Error('Service \"'+n+'\" needs role \"'+t.substr(1)+'\"!')});var r;try{r=JSON.parse(t)}catch(s){i({id:e.BAD_TYPE,msg:Error('Service \"'+n+'\" should return a valid JSON!\\n'+s)})}o(r)}else i({id:e.BAD_TYPE,msg:Error('Service \"'+n+'\" should return a string!')})},u.onerror=function(){i({id:e.HTTP_ERROR,msg:\"(\"+u.status+\") \"+u.statusText,status:u.status})};var l=\"s=\"+encodeURIComponent(n)+\"&i=\"+encodeURIComponent(JSON.stringify(t));u.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"),u.send(l)})}require(\"tfw.promise\");var r=require(\"tfw.storage\"),o=require(\"tfw.listeners\"),i=null,u=new o,s={url:\"tfw\"},l=r.local.get(\"nigolotua\");Array.isArray(l)&&(s.usr=l[0],s.pwd=l[1]),e.BAD_ROLE=-1,e.BAD_TYPE=-2,e.CONNECTION_FAILURE=-3,e.MISSING_AUTOLOGIN=-4,e.UNKNOWN_USER=-5,e.HTTP_ERROR=-6,e.changeEvent=u,e.logout=function(){return i=null,u.fire(),r.local.set(\"nigolotua\",null),t(\"tfw.login.Logout\")},e.login=function(n,o){return\"undefined\"==typeof n&&(n=s.usr),\"undefined\"==typeof o&&(o=s.pwd),new Promise(function(s,l){if(\"undefined\"==typeof n){var f=r.local.get(\"nigolotua\");if(!Array.isArray(f))return l({id:e.MISSING_AUTOLOGIN});n=f[0],o=f[1]}r.local.set(\"nigolotua\",null),t(\"tfw.login.Challenge\",n).then(function(e){var n,r,i,u,s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],l=0,f=[];for(n=0;n<o.length;n++)f.push(o.charCodeAt(n));for(256%f.length==0&&f.push(0),n=0;256>n;n++)s[n%16]^=n+f[n%f.length],r=e[l++%e.length]%16,i=e[l++%e.length]%16,u=e[l++%e.length]%16,s[u]^=(s[u]+16*i+u)%256,s[i]^=(s[r]+s[u])%256;return t(\"tfw.login.Response\",s)},l).then(function(t){\"object\"==typeof t?(i={data:t,hasRole:function(e){for(var n=0;n<t.roles.length;n++){var r=t.roles[n];if(r==e)return!0}return!1}},r.local.set(\"nigolotua\",[n,o]),u.fire(),s(t)):(i=null,l({id:e.UNKNOWN_USER}))},l)})},e.get=function(n,r,o){return new Promise(function(i,u){t(n,r,o).then(i,function(s){\"object\"==typeof s&&s.id==e.BAD_ROLE?e.login().then(function(){t(n,r,o).then(i,u)},u):u(s)})})},e.user=function(){return i},e.config=function(e,n){return\"undefined\"==typeof n?s[e]:(s[e]=n,n)},window.$$&&(window.$$.service=function(n,t,r,o,i){var u=e.get(n,t);u.then(function(e){return o?r[o].call(r,e):e},function(e){return i?r[i].call(r,e):e})})});\n//# sourceMappingURL=tfw.web-service.js.map","map":{"version":3,"file":"tfw.web-service.js.map","sources":["tfw.web-service.js"],"sourcesContent":["require( 'tfw.web-service', function(exports, module) {  require(\"tfw.promise\");\r\nvar Storage = require(\"tfw.storage\");\r\nvar Listeners = require(\"tfw.listeners\");\r\n\r\nvar currentUser = null;\r\nvar changeEvent = new Listeners();\r\nvar config = {url: \"tfw\"};\r\nvar saved = Storage.local.get(\"nigolotua\");\r\nif (Array.isArray(saved)) {\r\n    config.usr = saved[0];\r\n    config.pwd = saved[1];\r\n}\r\n\r\nexports.BAD_ROLE = -1;\r\nexports.BAD_TYPE = -2;\r\nexports.CONNECTION_FAILURE = -3;\r\nexports.MISSING_AUTOLOGIN = -4;\r\nexports.UNKNOWN_USER = -5;\r\nexports.HTTP_ERROR = -6;\r\n\r\nfunction svc(name, args, url) {\r\n    console.info(\"[tfw.web-service]\", name, args);\r\n    return new Promise(\r\n        function(resolve, reject) {\r\n            if (typeof url === 'undefined') url = config.url;\r\n            var that = this;\r\n            var xhr = new XMLHttpRequest({mozSystem: true});\r\n            if ('withCredentials' in xhr) {\r\n                xhr.open(\"POST\", url + \"/svc.php\", true);\r\n                xhr.withCredentials = true;  // Indispensable pour le CORS.\r\n            } else {\r\n                // IE\r\n                xhr = new XDomainRequest();\r\n                xhr.open(\"POST\", url + \"/svc.php\");\r\n            }\r\n            xhr.onload = function() {\r\n                if (xhr.status != 200) {\r\n                    reject(\r\n                        {\r\n                            id: exports.HTTP_ERROR,\r\n                            msg: \"(\" + xhr.status + \") \" + xhr.statusText,\r\n                            status: xhr.status\r\n                        }\r\n                    );\r\n                }\r\n                var value = xhr.responseText;\r\n                if (typeof value === \"string\") {\r\n                    if (value.substr(0, 1) == \"!\") {\r\n                        reject(\r\n                            {\r\n                                id: exports.BAD_ROLE,\r\n                                msg: Error(\"Service \\\"\" + name + \"\\\" needs role \\\"\"\r\n                                           + value.substr(1) + \"\\\"!\")\r\n                            }\r\n                        );\r\n                    }\r\n                    var valueObject;\r\n                    try {\r\n                        valueObject = JSON.parse(value);\r\n                    }\r\n                    catch (ex) {\r\n                        reject(\r\n                            {\r\n                                id: exports.BAD_TYPE,\r\n                                msg: Error(\"Service \\\"\" + name\r\n                                           + \"\\\" should return a valid JSON!\\n\" + ex)\r\n                            }\r\n                        );\r\n                    }\r\n                    resolve(valueObject);\r\n                } else {\r\n                    reject(\r\n                        {\r\n                            id: exports.BAD_TYPE,\r\n                            msg: Error(\"Service \\\"\" + name + \"\\\" should return a string!\")\r\n                        }\r\n                    );\r\n                }\r\n            };\r\n            xhr.onerror = function() {\r\n                reject(\r\n                    {\r\n                        id: exports.HTTP_ERROR,\r\n                        msg: \"(\" + xhr.status + \") \" + xhr.statusText,\r\n                        status: xhr.status\r\n                    }\r\n                );\r\n            };\r\n            var params = \"s=\" + encodeURIComponent(name)\r\n                + \"&i=\" + encodeURIComponent(JSON.stringify(args));\r\n            xhr.setRequestHeader(\r\n                \"Content-type\",\r\n                \"application/x-www-form-urlencoded\");\r\n            xhr.send(params);\r\n        }\r\n    );\r\n}\r\n\r\n/**\r\n * Event fired when login status has changed.\r\n * @type {tfw.listeners}\r\n */\r\nexports.changeEvent = changeEvent;\r\n\r\n/**\r\n * Disconnect current user.\r\n * @return {Promise} A _thenable_ object resolved as soon as the server answered.\r\n */\r\nexports.logout = function() {\r\n    currentUser = null;\r\n    changeEvent.fire();\r\n    Storage.local.set(\"nigolotua\", null);\r\n    return svc(\"tfw.login.Logout\");\r\n};\r\n\r\n/**\r\n * Try to connect a user.\r\n * @param {string} usr Login name.\r\n * @param {string} pwd Password.\r\n * @return {Promise}\r\n *\r\n */\r\nexports.login = function(usr, pwd) {\r\n    if (typeof usr === 'undefined') usr = config.usr;\r\n    if (typeof pwd === 'undefined') pwd = config.pwd;\r\n\r\n    return new Promise(\r\n        function (resolve, reject) {\r\n            if (typeof usr === 'undefined') {\r\n                var autologin = Storage.local.get(\"nigolotua\");\r\n                if (!Array.isArray(autologin)) return reject({id: exports.MISSING_AUTOLOGIN});\r\n                usr = autologin[0];\r\n                pwd = autologin[1];\r\n            }\r\n            Storage.local.set(\"nigolotua\", null);\r\n            svc(\"tfw.login.Challenge\", usr)\r\n                .then(\r\n                    function(code) {\r\n                        // Hashage du mot de passe Ã  l'aide du code.\r\n                        var output = [0, 0, 0, 0,\r\n                                      0, 0, 0, 0,\r\n                                      0, 0, 0, 0,\r\n                                      0, 0, 0, 0],\r\n                        i, j = 0,\r\n                        pass = [],\r\n                        k1, k2, k3;\r\n                        for (i=0 ; i<pwd.length ; i++) {\r\n                            pass.push(pwd.charCodeAt(i));\r\n                        }\r\n                        if (256 % pass.length == 0) {\r\n                            pass.push(0);\r\n                        }\r\n\r\n                        for (i=0 ; i<256 ; i++) {\r\n                            output[i % 16] ^= i + pass[i % pass.length];\r\n                            k1 = code[j++ % code.length]%16;\r\n                            k2 = code[j++ % code.length]%16;\r\n                            k3 = code[j++ % code.length]%16;\r\n                            output[k3] ^= (output[k3] + 16*k2 + k3)%256;\r\n                            output[k2] ^= (output[k1] + output[k3])%256;\r\n                        }\r\n                        return svc(\"tfw.login.Response\", output); //.then(resolve, reject);\r\n                    },\r\n                    reject\r\n                )\r\n                .then(\r\n                    function(user) {\r\n                        if (typeof user === 'object') {\r\n                            currentUser = {\r\n                                data: user,\r\n                                hasRole: function(role) {\r\n                                    for (var i = 0 ; i < user.roles.length ; i++) {\r\n                                        var item = user.roles[i];\r\n                                        if (item == role) return true;\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            };\r\n                            Storage.local.set(\"nigolotua\", [usr, pwd]);\r\n                            changeEvent.fire();\r\n                            resolve(user);\r\n                        } else {\r\n                            currentUser = null;\r\n                            reject({id: exports.UNKNOWN_USER});\r\n                        }\r\n                    },\r\n                    reject\r\n                );\r\n        }\r\n    );\r\n};\r\n\r\n/**\r\n * Call a webservice.\r\n */\r\nexports.get = function(name, args, url) {\r\n    return new Promise(\r\n        function(resolve, reject) {\r\n            svc(name, args, url).then(\r\n                resolve,\r\n                function(err) {\r\n                    if (typeof err === 'object' && err.id == exports.BAD_ROLE) {\r\n                        // Echec de connexion, on retente de se connecter avant d'abandonner.\r\n                        exports.login().then(\r\n                            function() {\r\n                                svc(name, args, url).then(resolve, reject);\r\n                            },\r\n                            reject\r\n                        );\r\n                    } else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    );\r\n};\r\n\r\nexports.user = function() {\r\n    return currentUser;\r\n};\r\n\r\nexports.config = function(key, val) {\r\n    if (typeof val === 'undefined') {\r\n        return config[key];\r\n    }\r\n    config[key] = val;\r\n    return val;\r\n};\r\n\r\n// _Backward compatibility.\r\nif (window.$$) {\r\n    window.$$.service = function (name, args, caller, onSuccess, onError) {\r\n        var p = exports.get(name, args);\r\n        p.then(\r\n            function(value) {\r\n                if (onSuccess) {\r\n                    return caller[onSuccess].call(caller, value);\r\n                }\r\n                return value;\r\n            },\r\n            function(reason) {\r\n                if (onError) {\r\n                    return caller[onError].call(caller, reason);\r\n                }\r\n                return reason;\r\n            }\r\n        );\r\n    };\r\n}\r\n });\r\n"],"names":["require","exports","module","svc","name","args","url","console","info","Promise","resolve","reject","config","xhr","XMLHttpRequest","mozSystem","open","withCredentials","XDomainRequest","onload","status","id","HTTP_ERROR","msg","statusText","value","responseText","substr","BAD_ROLE","Error","valueObject","JSON","parse","ex","BAD_TYPE","onerror","params","encodeURIComponent","stringify","setRequestHeader","send","Storage","Listeners","currentUser","changeEvent","saved","local","get","Array","isArray","usr","pwd","CONNECTION_FAILURE","MISSING_AUTOLOGIN","UNKNOWN_USER","logout","fire","set","login","autologin","then","code","i","k1","k2","k3","output","j","pass","length","push","charCodeAt","user","data","hasRole","role","roles","item","err","key","val","window","$$","service","caller","onSuccess","onError","p","call","reason"],"mappings":"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"},"dependencies":["mod/tfw.web-service","mod/tfw.promise","mod/tfw.storage","mod/tfw.listeners"]}