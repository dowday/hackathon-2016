{"intl":"","src":"require( 'hint-manager', function(exports, module) {  var $ = require(\"dom\");\nvar Tpl = require(\"x-template\");\nvar Data = require(\"data\");\nvar Bool = require(\"boolean\");\nvar Field = require(\"field\");\nvar Hints = require(\"hints\");\n\n\nexports.appendTo = appendTo;\n\nfunction appendTo( hintID, parent ) {\n    var hint = Hints[hintID];\n    if( typeof hint === 'undefined' ) throw Error( 'Unknown hint \"' + hintID + '\"!' );\n    var children = Tpl.appendTo( 'hint', parent );\n    children.question.innerHTML = hint.question;\n    window.setTimeout( $.addClass.bind( $, children.question, 'show' ) );\n\n    var exec = function( item ) {\n        $.clear( parent );\n        Data.save();\n        var next = item[1];\n        if( next ) {\n            if( next.charAt( 0 ) == '#' ) window.location = next;\n            else appendTo( next, parent );\n        }\n    };\n\n    var ans = children.answers;\n    hint.answers.forEach(function ( item ) {\nconsole.info(\"[hint-manager] item=...\", item);\n        addItem( item, ans, exec.bind( this, item ) );\n    }, this);\n};\n\nfunction addItem( item, parent, exec ) {\n    if( Array.isArray( item ) ) addButton( item, parent, exec );\n    if( !item.data ) return;\n    var type = end( item.data );\n    switch( type ) {\n        case 'bool': return addBool( item, parent );\n    }\n}\n\n\nfunction end( txt ) {\n    return txt.split( \".\" ).pop();\n}\n\n\nfunction addBool( item, parent ) {\n    parent.appendChild( Bool( item ) );\n}\n\nfunction addButton( item, parent, exec ) {\n    var a = $.tag( \"button\", \"wide tp4-button\", [item[0]] );\n    $.on( a, exec );\n    parent.appendChild( a );\n}\n });\n","zip":"require(\"hint-manager\",function(n,i){function e(n,i){var t=f[n];if(\"undefined\"==typeof t)throw Error('Unknown hint \"'+n+'\"!');var a=d.appendTo(\"hint\",i);a.question.innerHTML=t.question,window.setTimeout(u.addClass.bind(u,a.question,\"show\"));var o=function(n){u.clear(i),s.save();var r=n[1];r&&(\"#\"==r.charAt(0)?window.location=r:e(r,i))},c=a.answers;t.answers.forEach(function(n){console.info(\"[hint-manager] item=...\",n),r(n,c,o.bind(this,n))},this)}function r(n,i,e){if(Array.isArray(n)&&o(n,i,e),n.data){var r=t(n.data);switch(r){case\"bool\":return a(n,i)}}}function t(n){return n.split(\".\").pop()}function a(n,i){i.appendChild(c(n))}function o(n,i,e){var r=u.tag(\"button\",\"wide tp4-button\",[n[0]]);u.on(r,e),i.appendChild(r)}var u=require(\"dom\"),d=require(\"x-template\"),s=require(\"data\"),c=require(\"boolean\"),f=(require(\"field\"),require(\"hints\"));n.appendTo=e});\n//# sourceMappingURL=hint-manager.js.map","map":{"version":3,"file":"hint-manager.js.map","sources":["hint-manager.js"],"sourcesContent":["require( 'hint-manager', function(exports, module) {  var $ = require(\"dom\");\nvar Tpl = require(\"x-template\");\nvar Data = require(\"data\");\nvar Bool = require(\"boolean\");\nvar Field = require(\"field\");\nvar Hints = require(\"hints\");\n\n\nexports.appendTo = appendTo;\n\nfunction appendTo( hintID, parent ) {\n    var hint = Hints[hintID];\n    if( typeof hint === 'undefined' ) throw Error( 'Unknown hint \"' + hintID + '\"!' );\n    var children = Tpl.appendTo( 'hint', parent );\n    children.question.innerHTML = hint.question;\n    window.setTimeout( $.addClass.bind( $, children.question, 'show' ) );\n\n    var exec = function( item ) {\n        $.clear( parent );\n        Data.save();\n        var next = item[1];\n        if( next ) {\n            if( next.charAt( 0 ) == '#' ) window.location = next;\n            else appendTo( next, parent );\n        }\n    };\n\n    var ans = children.answers;\n    hint.answers.forEach(function ( item ) {\nconsole.info(\"[hint-manager] item=...\", item);\n        addItem( item, ans, exec.bind( this, item ) );\n    }, this);\n};\n\nfunction addItem( item, parent, exec ) {\n    if( Array.isArray( item ) ) addButton( item, parent, exec );\n    if( !item.data ) return;\n    var type = end( item.data );\n    switch( type ) {\n        case 'bool': return addBool( item, parent );\n    }\n}\n\n\nfunction end( txt ) {\n    return txt.split( \".\" ).pop();\n}\n\n\nfunction addBool( item, parent ) {\n    parent.appendChild( Bool( item ) );\n}\n\nfunction addButton( item, parent, exec ) {\n    var a = $.tag( \"button\", \"wide tp4-button\", [item[0]] );\n    $.on( a, exec );\n    parent.appendChild( a );\n}\n });\n"],"names":["require","exports","module","appendTo","hintID","parent","hint","Hints","Error","children","Tpl","question","innerHTML","window","setTimeout","$","addClass","bind","exec","item","clear","Data","save","next","charAt","location","ans","answers","forEach","console","info","addItem","this","Array","isArray","addButton","data","type","end","addBool","txt","split","pop","appendChild","Bool","a","tag","on"],"mappings":"AAAAA,QAAS,eAAgB,SAASC,EAASC,GAU3C,QAASC,GAAUC,EAAQC,GACvB,GAAIC,GAAOC,EAAMH,EACjB,IAAoB,mBAATE,GAAuB,KAAME,OAAO,iBAAmBJ,EAAS,KAC3E,IAAIK,GAAWC,EAAIP,SAAU,OAAQE,EACrCI,GAASE,SAASC,UAAYN,EAAKK,SACnCE,OAAOC,WAAYC,EAAEC,SAASC,KAAMF,EAAGN,EAASE,SAAU,QAE1D,IAAIO,GAAO,SAAUC,GACjBJ,EAAEK,MAAOf,GACTgB,EAAKC,MACL,IAAIC,GAAOJ,EAAK,EACZI,KACwB,KAApBA,EAAKC,OAAQ,GAAaX,OAAOY,SAAWF,EAC3CpB,EAAUoB,EAAMlB,KAIzBqB,EAAMjB,EAASkB,OACnBrB,GAAKqB,QAAQC,QAAQ,SAAWT,GACpCU,QAAQC,KAAK,0BAA2BX,GAChCY,EAASZ,EAAMO,EAAKR,EAAKD,KAAMe,KAAMb,KACtCa,MAGP,QAASD,GAASZ,EAAMd,EAAQa,GAE5B,GADIe,MAAMC,QAASf,IAASgB,EAAWhB,EAAMd,EAAQa,GAChDC,EAAKiB,KAAV,CACA,GAAIC,GAAOC,EAAKnB,EAAKiB,KACrB,QAAQC,GACJ,IAAK,OAAQ,MAAOE,GAASpB,EAAMd,KAK3C,QAASiC,GAAKE,GACV,MAAOA,GAAIC,MAAO,KAAMC,MAI5B,QAASH,GAASpB,EAAMd,GACpBA,EAAOsC,YAAaC,EAAMzB,IAG9B,QAASgB,GAAWhB,EAAMd,EAAQa,GAC9B,GAAI2B,GAAI9B,EAAE+B,IAAK,SAAU,mBAAoB3B,EAAK,IAClDJ,GAAEgC,GAAIF,EAAG3B,GACTb,EAAOsC,YAAaE,GAxD8B,GAAI9B,GAAIf,QAAQ,OAClEU,EAAMV,QAAQ,cACdqB,EAAOrB,QAAQ,QACf4C,EAAO5C,QAAQ,WAEfO,GADQP,QAAQ,SACRA,QAAQ,SAGpBC,GAAQE,SAAWA"},"dependencies":["mod/hint-manager","mod/dom","mod/x-template","mod/data","mod/boolean","mod/field","mod/hints"]}