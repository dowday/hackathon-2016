{"intl":"","src":"require( 'data', function(exports, module) {  var WS = require(\"tfw.web-service\");\r\nvar Local = require(\"tfw.storage\").local;\r\n\r\n\r\nvar DATA = Local.get( 'data', {} ) || {};\r\n\r\nvar MONTHES = [ 'January', 'February', 'March', 'April',\r\n                'May', 'June', 'July', 'August',\r\n                'September', 'October', 'November', 'December' ];\r\n\r\nexports.log = function( prettyprint) {\r\n    if( prettyprint ) {\r\n        console.info(\"[data] DATA=...\", JSON.stringify( DATA, null, '  ' ));\r\n    } else {\r\n        console.info(\"[data] DATA=...\", DATA);\r\n    }\r\n};\r\n\r\nexports.get = function( name ) {\r\n    var data = DATA;\r\n    var path = explodePath( name );\r\n    var item;\r\n    var key;\r\n    var i;\r\n    for( i=0 ; i<path.length ; i++ ) {\r\n        item = path[i];\r\n        data = data[item.name];\r\n        if( typeof data === 'undefined' ) return undefined;\r\n        if( Array.isArray( data ) && item.index ) {\r\n            key = exports.get( item.index );\r\n            data = data.find(function( elem ) {\r\n                return elem.$key == key;\r\n            });\r\n            if( typeof data === 'undefined' ) {\r\n                console.error( 'Key `' + key + \"` not found in `\" + name + \"` at level \" + i + \"!\" );\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\nexports.set = function( name, value ) {\r\n    if( typeof value === 'undefined' ) value = '';\r\n\r\n    // Values are always copied.\r\n    // This avoid cyclic problems.\r\n    value = JSON.parse( JSON.stringify( value ) );\r\n    \r\n    checkValueArrays( value );\r\n\r\n    var data = DATA;\r\n    var path = explodePath( name );\r\n    var next;\r\n    var item;\r\n    var key;\r\n    var i;\r\n    for( i=0 ; i<path.length - 1 ; i++ ) {\r\n        item = path[i];\r\n        if( typeof data[item.name] === 'undefined' ) {\r\n            if( path.index ) {\r\n                data[item.name] = [{ $key: exports.get( item.index ) }];\r\n            } else {\r\n                data[item.name] = {};\r\n            }\r\n        }\r\n        data = data[item.name];\r\n        if( item.index ) {\r\n            key = exports.get( item.index );\r\n            next = data.find(function( elem ) {\r\n                return elem.$key == key;\r\n            });\r\n            if( typeof next === 'undefined' ) {\r\n                data.push({ $key: key });\r\n            } else {\r\n                data = next;\r\n            }\r\n        }\r\n    }\r\n    data[path.pop().name] = value;\r\n};\r\n\r\n\r\nexports.reset = function() {\r\n    var arg0 = DATA.arg0;\r\n    var arg1 = DATA.arg1;\r\n    var arg2 = DATA.arg2;\r\n    var arg3 = DATA.arg3;\r\n    DATA = {\r\n        arg0: arg0,\r\n        arg1: arg1,\r\n        arg2: arg2,\r\n        arg3: arg3\r\n    };\r\n    exports.save();\r\n};\r\n\r\nexports.save = function() {\r\n    Local.set( 'data', DATA );\r\n    /*\r\n     var data = APP.data || {};\r\n     data.id = APP.id;\r\n     console.info(\"[data] data=...\", data);\r\n     WS.get(\r\n     'registration',\r\n     ['set', data ]\r\n     );\r\n     */\r\n};\r\n\r\n\r\nexports.parse = function( input, context ) {\r\n    if( typeof context === 'undefined' ) context = {};\r\n\r\n    if( Array.isArray( input ) ) {\r\n        var i, item, result;\r\n        for (i = 0 ; i < input.length ; i++) {\r\n            item = input[i];\r\n            result = exports.parse( item );\r\n            if( typeof result !== 'undefined' && result !== 'null' ) return result;\r\n        }\r\n    }\r\n    else if( typeof input === 'function' ) {\r\n        return exports.parse( input.call( exports ) );\r\n    }\r\n    else if( typeof input === 'string' ) {\r\n        var cursor = 0;\r\n        var posStart;\r\n        var posEnd;\r\n        var output = '';\r\n        var variable;\r\n        while( true ) {\r\n            posStart = input.indexOf( '{{', cursor );\r\n            if( posStart == -1 ) break;\r\n            output += input.substr( cursor, posStart - cursor );\r\n            cursor = posStart + 2;\r\n            posEnd = input.indexOf( '}}', cursor );\r\n            if( posEnd == -1 ) break;\r\n            variable = input.substr( cursor, posEnd - cursor ).trim().split( '|' );\r\n            if( typeof context[variable[0]] !== 'undefined' ) {\r\n                // This is a frozen var. Used in looping context.\r\n                variable[0] = context[variable[0]];\r\n            } else {\r\n                variable[0] = exports.get( variable[0] ) || '';\r\n            }\r\n            for( i = 1 ; i < variable.length ; i++ ) {\r\n                variable[0] = format( variable[0], variable[i] );\r\n            }\r\n            output += variable[0];\r\n            cursor = posEnd + 2;\r\n        }\r\n        return output + input.substr( cursor );\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\n\r\n/**\r\n * Examples of numeric dates are: `20160501`, `201605011830`.\r\n * Time can be added, but just hours and minutes.\r\n */\r\nexports.num2dat = function( num ) {\r\n    var txt = \"\" + num;\r\n    while( txt.length < 12 ) txt += \"0\";\r\n    return new Date(\r\n        parseInt( txt.substr( 0, 4) ),\r\n        parseInt( txt.substr( 4, 2) ) - 1,\r\n        parseInt( txt.substr( 6, 2) ),\r\n        parseInt( txt.substr( 8, 2) ),\r\n        parseInt( txt.substr( 10, 2) ),\r\n        0\r\n    );\r\n};\r\n\r\n\r\nexports.pad = function( value, size, filler ) {\r\n    if( typeof size === 'undefined' ) size = 2;\r\n    if( typeof filler === 'undefined' ) filler = '0';\r\n\r\n    value = \"\" + value;\r\n    while( value.length < size ) value = filler + value;\r\n    return value;\r\n};\r\n\r\n\r\n/**\r\n * Push `value` into an array called `name`.\r\n */\r\nexports.push = function( name, value ) {\r\n    var arr = exports.get( name );\r\n    if( !Array.isArray( arr ) ) {\r\n        console.error( \"[Data.push] `\" + name + \"` is not an array!\" );\r\n        return 0;\r\n    }\r\n    checkValueArrays( arr );\r\n    if( typeof value !== 'object' || Array.isArray( value )) {\r\n        value = { value: value };\r\n    }\r\n    value.$key = arr.$key++;\r\n    arr.push( value );\r\n    return value.$key;\r\n};\r\n\r\n/**\r\n * Remove in  array `arrName`  the item  with the  key given  by the\r\n * value of `keyName`.\r\n */\r\nexports.remove = function( arrName, keyName ) {\r\n    var arr = exports.get( arrName );\r\n    var key = exports.get( keyName );\r\n    var idx = arr.findIndex(function( item ) {\r\n        return item.$key == key;\r\n    });\r\n    if( idx == -1 ) return false;\r\n    arr.splice( idx, 1 );\r\n    return true;\r\n};\r\n\r\n\r\n\r\n/**\r\n * In  an array,  each item  must have  the `$key'  property. This  is\r\n * needed if you need to remove an element from that list.\r\n * Keys are just  incremenral numbers relative to the  array the items\r\n * belong. So  the array itself has  a `$key` attribute to  store this\r\n * increment.\r\n */\r\nfunction checkValueArrays( value ) {\r\n    if( Array.isArray( value ) ) {\r\n        if( typeof value.$key !== 'number' ) {\r\n            // New ID for elements of this array.\r\n            value.$key = 1;\r\n        }\r\n        var values = [];\r\n        value.forEach(function ( item ) {\r\n            if( typeof item !== 'object' || Array.isArray( item )) {\r\n                item = { value: item };\r\n            }            \r\n            if( typeof item.$key !== 'number' ) {\r\n                item.$key = value.$key++;\r\n            }\r\n            checkValueArrays( item );\r\n            values.push( item );\r\n        });\r\n        value.splice( 0, value.length );\r\n        values.forEach(function ( item ) {\r\n            value.push( item );\r\n        });\r\n\r\n    }\r\n    else if( typeof value === 'object' ) {\r\n        var key;\r\n        for( key in value ) {\r\n            checkValueArrays( value[key] );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction format( value, type ) {\r\n    switch( type ) {\r\n    case 'date':\r\n        value = exports.num2dat( value );\r\n        return MONTHES[value.getMonth()] + \" \" + value.getDate() + \", \" + value.getFullYear();\r\n    case 'time':\r\n        value = exports.num2dat( value );\r\n        return value.getHours() + \":\" + exports.pad( value.getMinutes() );\r\n    case 'datetime':\r\n        value = exports.num2dat( value );\r\n        return MONTHES[value.getMonth()] + \" \" + value.getDate() + \", \" + value.getFullYear()\r\n            + \"  \" + value.getHours() + \":\" + exports.pad( value.getMinutes() );\r\n    }\r\n    return value;\r\n}\r\n\r\nfunction explodePath( name ) {\r\n    var start = 0;\r\n    var cursor = 0;\r\n    var mode = 0;\r\n    var path = [];\r\n    var pathItem;\r\n    var c;\r\n\r\n    for( cursor = 0 ; cursor < name.length ; cursor++ ) {\r\n        c = name.charAt( cursor );\r\n        if( mode == 0 ) {\r\n            if( c == '[' || c == '.' ) {\r\n                pathItem = { name: name.substr( start, cursor - start ) };\r\n                path.push( pathItem );\r\n                start = cursor + 1;\r\n                if( c == '[' ) {\r\n                    mode = 1;\r\n                }\r\n            }\r\n        }\r\n        else if( mode == -1 ) {\r\n            // After a `]`, we must find a `.`.\r\n            if( c == '.' ) {\r\n                start = cursor + 1;\r\n                mode = 0;\r\n            }\r\n            else {\r\n                console.error( \"Bad var name!\\n\" + name + \"\\nPos: \" + cursor );\r\n            }\r\n        }\r\n        else {\r\n            if( c == '[' ) {\r\n                mode++;\r\n            }\r\n            else if( c == ']' ) {\r\n                mode--;\r\n                if( mode == 0 ) {\r\n                    pathItem.index = name.substr( start, cursor - start );\r\n                    start = cursor + 1;\r\n                    mode = -1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if( mode == 0 ) {\r\n        path.push( { name: name.substr( start ) } );\r\n    }\r\n    else {\r\n        console.error( \"Bad ending for var name!\\n\" + name );\r\n    }\r\n\r\n    return path;\r\n}\r\n });\r\n","zip":"require(\"data\",function(e,r){function n(e){if(Array.isArray(e)){\"number\"!=typeof e.$key&&(e.$key=1);var r=[];e.forEach(function(t){(\"object\"!=typeof t||Array.isArray(t))&&(t={value:t}),\"number\"!=typeof t.$key&&(t.$key=e.$key++),n(t),r.push(t)}),e.splice(0,e.length),r.forEach(function(r){e.push(r)})}else if(\"object\"==typeof e){var t;for(t in e)n(e[t])}}function t(r,n){switch(n){case\"date\":return r=e.num2dat(r),i[r.getMonth()]+\" \"+r.getDate()+\", \"+r.getFullYear();case\"time\":return r=e.num2dat(r),r.getHours()+\":\"+e.pad(r.getMinutes());case\"datetime\":return r=e.num2dat(r),i[r.getMonth()]+\" \"+r.getDate()+\", \"+r.getFullYear()+\"  \"+r.getHours()+\":\"+e.pad(r.getMinutes())}return r}function a(e){var r,n,t=0,a=0,u=0,o=[];for(a=0;a<e.length;a++)n=e.charAt(a),0==u?\"[\"!=n&&\".\"!=n||(r={name:e.substr(t,a-t)},o.push(r),t=a+1,\"[\"==n&&(u=1)):-1==u?\".\"==n?(t=a+1,u=0):console.error(\"Bad var name!\\n\"+e+\"\\nPos: \"+a):\"[\"==n?u++:\"]\"==n&&(u--,0==u&&(r.index=e.substr(t,a-t),t=a+1,u=-1));return 0==u?o.push({name:e.substr(t)}):console.error(\"Bad ending for var name!\\n\"+e),o}var u=(require(\"tfw.web-service\"),require(\"tfw.storage\").local),o=u.get(\"data\",{})||{},i=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];e.log=function(e){e?console.info(\"[data] DATA=...\",JSON.stringify(o,null,\"  \")):console.info(\"[data] DATA=...\",o)},e.get=function(r){var n,t,u,i=o,f=a(r);for(u=0;u<f.length;u++){if(n=f[u],i=i[n.name],\"undefined\"==typeof i)return;if(Array.isArray(i)&&n.index&&(t=e.get(n.index),i=i.find(function(e){return e.$key==t}),\"undefined\"==typeof i))return void console.error(\"Key `\"+t+\"` not found in `\"+r+\"` at level \"+u+\"!\")}return i},e.set=function(r,t){\"undefined\"==typeof t&&(t=\"\"),t=JSON.parse(JSON.stringify(t)),n(t);var u,i,f,s,d=o,y=a(r);for(s=0;s<y.length-1;s++)i=y[s],\"undefined\"==typeof d[i.name]&&(y.index?d[i.name]=[{$key:e.get(i.index)}]:d[i.name]={}),d=d[i.name],i.index&&(f=e.get(i.index),u=d.find(function(e){return e.$key==f}),\"undefined\"==typeof u?d.push({$key:f}):d=u);d[y.pop().name]=t},e.reset=function(){var r=o.arg0,n=o.arg1,t=o.arg2,a=o.arg3;o={arg0:r,arg1:n,arg2:t,arg3:a},e.save()},e.save=function(){u.set(\"data\",o)},e.parse=function(r,n){if(\"undefined\"==typeof n&&(n={}),Array.isArray(r)){var a,u,o;for(a=0;a<r.length;a++)if(u=r[a],o=e.parse(u),\"undefined\"!=typeof o&&\"null\"!==o)return o}else{if(\"function\"==typeof r)return e.parse(r.call(e));if(\"string\"==typeof r){for(var i,f,s,d=0,y=\"\";;){if(i=r.indexOf(\"{{\",d),-1==i)break;if(y+=r.substr(d,i-d),d=i+2,f=r.indexOf(\"}}\",d),-1==f)break;for(s=r.substr(d,f-d).trim().split(\"|\"),\"undefined\"!=typeof n[s[0]]?s[0]=n[s[0]]:s[0]=e.get(s[0])||\"\",a=1;a<s.length;a++)s[0]=t(s[0],s[a]);y+=s[0],d=f+2}return y+r.substr(d)}}},e.num2dat=function(e){for(var r=\"\"+e;r.length<12;)r+=\"0\";return new Date(parseInt(r.substr(0,4)),parseInt(r.substr(4,2))-1,parseInt(r.substr(6,2)),parseInt(r.substr(8,2)),parseInt(r.substr(10,2)),0)},e.pad=function(e,r,n){for(\"undefined\"==typeof r&&(r=2),\"undefined\"==typeof n&&(n=\"0\"),e=\"\"+e;e.length<r;)e=n+e;return e},e.push=function(r,t){var a=e.get(r);return Array.isArray(a)?(n(a),(\"object\"!=typeof t||Array.isArray(t))&&(t={value:t}),t.$key=a.$key++,a.push(t),t.$key):(console.error(\"[Data.push] `\"+r+\"` is not an array!\"),0)},e.remove=function(r,n){var t=e.get(r),a=e.get(n),u=t.findIndex(function(e){return e.$key==a});return-1==u?!1:(t.splice(u,1),!0)}});\n//# sourceMappingURL=data.js.map","map":{"version":3,"file":"data.js.map","sources":["data.js"],"sourcesContent":["require( 'data', function(exports, module) {  var WS = require(\"tfw.web-service\");\r\nvar Local = require(\"tfw.storage\").local;\r\n\r\n\r\nvar DATA = Local.get( 'data', {} ) || {};\r\n\r\nvar MONTHES = [ 'January', 'February', 'March', 'April',\r\n                'May', 'June', 'July', 'August',\r\n                'September', 'October', 'November', 'December' ];\r\n\r\nexports.log = function( prettyprint) {\r\n    if( prettyprint ) {\r\n        console.info(\"[data] DATA=...\", JSON.stringify( DATA, null, '  ' ));\r\n    } else {\r\n        console.info(\"[data] DATA=...\", DATA);\r\n    }\r\n};\r\n\r\nexports.get = function( name ) {\r\n    var data = DATA;\r\n    var path = explodePath( name );\r\n    var item;\r\n    var key;\r\n    var i;\r\n    for( i=0 ; i<path.length ; i++ ) {\r\n        item = path[i];\r\n        data = data[item.name];\r\n        if( typeof data === 'undefined' ) return undefined;\r\n        if( Array.isArray( data ) && item.index ) {\r\n            key = exports.get( item.index );\r\n            data = data.find(function( elem ) {\r\n                return elem.$key == key;\r\n            });\r\n            if( typeof data === 'undefined' ) {\r\n                console.error( 'Key `' + key + \"` not found in `\" + name + \"` at level \" + i + \"!\" );\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\nexports.set = function( name, value ) {\r\n    if( typeof value === 'undefined' ) value = '';\r\n\r\n    // Values are always copied.\r\n    // This avoid cyclic problems.\r\n    value = JSON.parse( JSON.stringify( value ) );\r\n    \r\n    checkValueArrays( value );\r\n\r\n    var data = DATA;\r\n    var path = explodePath( name );\r\n    var next;\r\n    var item;\r\n    var key;\r\n    var i;\r\n    for( i=0 ; i<path.length - 1 ; i++ ) {\r\n        item = path[i];\r\n        if( typeof data[item.name] === 'undefined' ) {\r\n            if( path.index ) {\r\n                data[item.name] = [{ $key: exports.get( item.index ) }];\r\n            } else {\r\n                data[item.name] = {};\r\n            }\r\n        }\r\n        data = data[item.name];\r\n        if( item.index ) {\r\n            key = exports.get( item.index );\r\n            next = data.find(function( elem ) {\r\n                return elem.$key == key;\r\n            });\r\n            if( typeof next === 'undefined' ) {\r\n                data.push({ $key: key });\r\n            } else {\r\n                data = next;\r\n            }\r\n        }\r\n    }\r\n    data[path.pop().name] = value;\r\n};\r\n\r\n\r\nexports.reset = function() {\r\n    var arg0 = DATA.arg0;\r\n    var arg1 = DATA.arg1;\r\n    var arg2 = DATA.arg2;\r\n    var arg3 = DATA.arg3;\r\n    DATA = {\r\n        arg0: arg0,\r\n        arg1: arg1,\r\n        arg2: arg2,\r\n        arg3: arg3\r\n    };\r\n    exports.save();\r\n};\r\n\r\nexports.save = function() {\r\n    Local.set( 'data', DATA );\r\n    /*\r\n     var data = APP.data || {};\r\n     data.id = APP.id;\r\n     console.info(\"[data] data=...\", data);\r\n     WS.get(\r\n     'registration',\r\n     ['set', data ]\r\n     );\r\n     */\r\n};\r\n\r\n\r\nexports.parse = function( input, context ) {\r\n    if( typeof context === 'undefined' ) context = {};\r\n\r\n    if( Array.isArray( input ) ) {\r\n        var i, item, result;\r\n        for (i = 0 ; i < input.length ; i++) {\r\n            item = input[i];\r\n            result = exports.parse( item );\r\n            if( typeof result !== 'undefined' && result !== 'null' ) return result;\r\n        }\r\n    }\r\n    else if( typeof input === 'function' ) {\r\n        return exports.parse( input.call( exports ) );\r\n    }\r\n    else if( typeof input === 'string' ) {\r\n        var cursor = 0;\r\n        var posStart;\r\n        var posEnd;\r\n        var output = '';\r\n        var variable;\r\n        while( true ) {\r\n            posStart = input.indexOf( '{{', cursor );\r\n            if( posStart == -1 ) break;\r\n            output += input.substr( cursor, posStart - cursor );\r\n            cursor = posStart + 2;\r\n            posEnd = input.indexOf( '}}', cursor );\r\n            if( posEnd == -1 ) break;\r\n            variable = input.substr( cursor, posEnd - cursor ).trim().split( '|' );\r\n            if( typeof context[variable[0]] !== 'undefined' ) {\r\n                // This is a frozen var. Used in looping context.\r\n                variable[0] = context[variable[0]];\r\n            } else {\r\n                variable[0] = exports.get( variable[0] ) || '';\r\n            }\r\n            for( i = 1 ; i < variable.length ; i++ ) {\r\n                variable[0] = format( variable[0], variable[i] );\r\n            }\r\n            output += variable[0];\r\n            cursor = posEnd + 2;\r\n        }\r\n        return output + input.substr( cursor );\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\n\r\n/**\r\n * Examples of numeric dates are: `20160501`, `201605011830`.\r\n * Time can be added, but just hours and minutes.\r\n */\r\nexports.num2dat = function( num ) {\r\n    var txt = \"\" + num;\r\n    while( txt.length < 12 ) txt += \"0\";\r\n    return new Date(\r\n        parseInt( txt.substr( 0, 4) ),\r\n        parseInt( txt.substr( 4, 2) ) - 1,\r\n        parseInt( txt.substr( 6, 2) ),\r\n        parseInt( txt.substr( 8, 2) ),\r\n        parseInt( txt.substr( 10, 2) ),\r\n        0\r\n    );\r\n};\r\n\r\n\r\nexports.pad = function( value, size, filler ) {\r\n    if( typeof size === 'undefined' ) size = 2;\r\n    if( typeof filler === 'undefined' ) filler = '0';\r\n\r\n    value = \"\" + value;\r\n    while( value.length < size ) value = filler + value;\r\n    return value;\r\n};\r\n\r\n\r\n/**\r\n * Push `value` into an array called `name`.\r\n */\r\nexports.push = function( name, value ) {\r\n    var arr = exports.get( name );\r\n    if( !Array.isArray( arr ) ) {\r\n        console.error( \"[Data.push] `\" + name + \"` is not an array!\" );\r\n        return 0;\r\n    }\r\n    checkValueArrays( arr );\r\n    if( typeof value !== 'object' || Array.isArray( value )) {\r\n        value = { value: value };\r\n    }\r\n    value.$key = arr.$key++;\r\n    arr.push( value );\r\n    return value.$key;\r\n};\r\n\r\n/**\r\n * Remove in  array `arrName`  the item  with the  key given  by the\r\n * value of `keyName`.\r\n */\r\nexports.remove = function( arrName, keyName ) {\r\n    var arr = exports.get( arrName );\r\n    var key = exports.get( keyName );\r\n    var idx = arr.findIndex(function( item ) {\r\n        return item.$key == key;\r\n    });\r\n    if( idx == -1 ) return false;\r\n    arr.splice( idx, 1 );\r\n    return true;\r\n};\r\n\r\n\r\n\r\n/**\r\n * In  an array,  each item  must have  the `$key'  property. This  is\r\n * needed if you need to remove an element from that list.\r\n * Keys are just  incremenral numbers relative to the  array the items\r\n * belong. So  the array itself has  a `$key` attribute to  store this\r\n * increment.\r\n */\r\nfunction checkValueArrays( value ) {\r\n    if( Array.isArray( value ) ) {\r\n        if( typeof value.$key !== 'number' ) {\r\n            // New ID for elements of this array.\r\n            value.$key = 1;\r\n        }\r\n        var values = [];\r\n        value.forEach(function ( item ) {\r\n            if( typeof item !== 'object' || Array.isArray( item )) {\r\n                item = { value: item };\r\n            }            \r\n            if( typeof item.$key !== 'number' ) {\r\n                item.$key = value.$key++;\r\n            }\r\n            checkValueArrays( item );\r\n            values.push( item );\r\n        });\r\n        value.splice( 0, value.length );\r\n        values.forEach(function ( item ) {\r\n            value.push( item );\r\n        });\r\n\r\n    }\r\n    else if( typeof value === 'object' ) {\r\n        var key;\r\n        for( key in value ) {\r\n            checkValueArrays( value[key] );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction format( value, type ) {\r\n    switch( type ) {\r\n    case 'date':\r\n        value = exports.num2dat( value );\r\n        return MONTHES[value.getMonth()] + \" \" + value.getDate() + \", \" + value.getFullYear();\r\n    case 'time':\r\n        value = exports.num2dat( value );\r\n        return value.getHours() + \":\" + exports.pad( value.getMinutes() );\r\n    case 'datetime':\r\n        value = exports.num2dat( value );\r\n        return MONTHES[value.getMonth()] + \" \" + value.getDate() + \", \" + value.getFullYear()\r\n            + \"  \" + value.getHours() + \":\" + exports.pad( value.getMinutes() );\r\n    }\r\n    return value;\r\n}\r\n\r\nfunction explodePath( name ) {\r\n    var start = 0;\r\n    var cursor = 0;\r\n    var mode = 0;\r\n    var path = [];\r\n    var pathItem;\r\n    var c;\r\n\r\n    for( cursor = 0 ; cursor < name.length ; cursor++ ) {\r\n        c = name.charAt( cursor );\r\n        if( mode == 0 ) {\r\n            if( c == '[' || c == '.' ) {\r\n                pathItem = { name: name.substr( start, cursor - start ) };\r\n                path.push( pathItem );\r\n                start = cursor + 1;\r\n                if( c == '[' ) {\r\n                    mode = 1;\r\n                }\r\n            }\r\n        }\r\n        else if( mode == -1 ) {\r\n            // After a `]`, we must find a `.`.\r\n            if( c == '.' ) {\r\n                start = cursor + 1;\r\n                mode = 0;\r\n            }\r\n            else {\r\n                console.error( \"Bad var name!\\n\" + name + \"\\nPos: \" + cursor );\r\n            }\r\n        }\r\n        else {\r\n            if( c == '[' ) {\r\n                mode++;\r\n            }\r\n            else if( c == ']' ) {\r\n                mode--;\r\n                if( mode == 0 ) {\r\n                    pathItem.index = name.substr( start, cursor - start );\r\n                    start = cursor + 1;\r\n                    mode = -1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if( mode == 0 ) {\r\n        path.push( { name: name.substr( start ) } );\r\n    }\r\n    else {\r\n        console.error( \"Bad ending for var name!\\n\" + name );\r\n    }\r\n\r\n    return path;\r\n}\r\n });\r\n"],"names":["require","exports","module","checkValueArrays","value","Array","isArray","$key","values","forEach","item","push","splice","length","key","format","type","num2dat","MONTHES","getMonth","getDate","getFullYear","getHours","pad","getMinutes","explodePath","name","pathItem","c","start","cursor","mode","path","charAt","substr","console","error","index","Local","local","DATA","get","log","prettyprint","info","JSON","stringify","i","data","find","elem","set","parse","next","pop","reset","arg0","arg1","arg2","arg3","save","input","context","result","call","posStart","posEnd","variable","output","indexOf","trim","split","num","txt","Date","parseInt","size","filler","arr","remove","arrName","keyName","idx","findIndex"],"mappings":"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"},"dependencies":["mod/data","mod/tfw.web-service","mod/tfw.storage"]}