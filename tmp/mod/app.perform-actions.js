{"intl":"","src":"require( 'app.perform-actions', function(exports, module) {  /**********************************************************************\n require( 'app.perform-actions' )\n -----------------------------------------------------------------------\n \n **********************************************************************/\nvar $ = require(\"dom\");\nvar Data = require('data');\nvar Tpl = require(\"x-template\");\nvar InputBool = require(\"input-boolean\");\nvar InputText = require(\"input-text\");\nvar InputFile = require(\"input-file\");\nvar InputDate = require(\"input-date\");\n\n\nmodule.exports = function( children ) {\n    var body = $.div();\n\n    children.forEach(function ( child, idx ) {\n        if( !Array.isArray( child ) ) {\n            console.error( \"Element #\" + idx + \" should be an array!\" );\n            console.info(\"[app.perform-actions] child=...\", child);\n            console.info(\"[app.perform-actions] children=...\", children);\n        }\n        var actionID = child[0];\n        var action = actions[actionID];\n        if( action ) {\n            var element = action.apply( body, child.slice( 1 ) );\n            if( typeof element === 'string' ) {\n                location.hash = '#' + element;\n                return;\n            }\n            if( element ) body.appendChild( element );\n        } else {\n            throw \"Unknonw type `\" + actionID + \"`!\";\n        }\n    });\n\n    return body;\n};\n\n\nvar actions = {\n    text: function( args ) {\n        var div = $.tag( 'p' );\n        div.innerHTML = parse( args );\n        return div;\n    },\n    button: function( args ) {\n        var btn = $.tag( 'a', 'button' );\n        $.on( btn, function() {\n            var target = parse( args.action );\n            if( typeof target === 'string' && target.length > 0 ) {\n                location.hash = \"#\" + target;\n            }\n        });\n        btn.innerHTML = parse( args.text );\n        return btn;\n    },\n    nurse: function( args ) {\n        var content = $.div();\n        var children = Tpl.appendTo( \"nurse\", content );\n        children.text.innerHTML = parse( args );\n        return content;\n    },\n    reset: function( args ) {\n        Data.reset();\n        var key, val;\n        for( key in args ) {\n            val = args[key];\n            Data.set( key, val );\n        }\n    },\n    set: function( args ) {\n        var key, val;\n        for( key in args ) {\n            val = args[key];\n            Data.set( key, val );\n        }\n    },\n    \"input-bool\": function( args ) {\n        return InputBool( args );\n    },\n    \"input-text\": function( args ) {\n        return InputText( args );\n    },\n    \"input-file\": function( args ) {\n        return InputFile( args );\n    },\n    \"input-date\": function( args ) {\n        return InputDate( args );\n    },\n    loop: function( args, children ) {\n        var list = parse( args.list );\n        var item = parse( args.item );\n        var sort = parse( args.sort );\n        \n        var arr = Data.get( list );\n        if( !Array.isArray( arr ) ) arr = [arr];\n\n        // Sorting.\n        if( typeof sort === 'string' && sort.trim().length > 0 ) {\n            sort = [sort];\n        }\n        if( Array.isArray( sort ) ) {\n            arr.sort(function( a, b ) {\n                var i, att;\n                for (i = 0 ; i < sort.length ; i++) {\n                    att = sort[i];\n                    if( a[att] < b[att] ) return -1;\n                    if( a[att] > b[att] ) return 1;\n                }\n                return 0;\n            });\n        }\n\n        // Filtering.\n        if( typeof args.filter === 'function' ) {\n            arr = arr.filter( args.filter );\n        }\n\n        var content = $.div();\n        arr.forEach(function ( child ) {\n            Data.set( item, child );\n            content.appendChild( module.exports( children ) );\n        });\n\n        return content;\n    }\n};\n\n\nfunction parse( input ) {\n    if( Array.isArray( input ) ) {\n        var i, item, result;\n        for (i = 0 ; i < input.length ; i++) {\n            item = input[i];\n            result = parse( item );\n            if( typeof result !== 'undefined' && result !== 'null' ) return result;\n        }\n    }\n    else if( typeof input === 'function' ) {\n        return parse( input.call( Data ) );\n    }\n    else if( typeof input === 'string' ) {\n        var cursor = 0;\n        var posStart;\n        var posEnd;\n        var output = '';\n        while( true ) {\n            posStart = input.indexOf( '{{', cursor );\n            if( posStart == -1 ) break;\n            output += input.substr( cursor, posStart - cursor );\n            cursor = posStart + 2;\n            posEnd = input.indexOf( '}}', cursor );\n            if( posEnd == -1 ) break;\n            output += Data.get( input.substr( cursor, posEnd - cursor ).trim() );\n            cursor = posEnd + 2;\n        }\n        return output + input.substr( cursor );\n    }\n\n    return undefined;\n}\n });\n","zip":"require(\"app.perform-actions\",function(r,t){function n(r){if(Array.isArray(r)){var t,e,o;for(t=0;t<r.length;t++)if(e=r[t],o=n(e),\"undefined\"!=typeof o&&\"null\"!==o)return o}else{if(\"function\"==typeof r)return n(r.call(i));if(\"string\"==typeof r){for(var u,a,f=0,p=\"\";;){if(u=r.indexOf(\"{{\",f),-1==u)break;if(p+=r.substr(f,u-f),f=u+2,a=r.indexOf(\"}}\",f),-1==a)break;p+=i.get(r.substr(f,a-f).trim()),f=a+2}return p+r.substr(f)}}}var e=require(\"dom\"),i=require(\"data\"),o=require(\"x-template\"),u=require(\"input-boolean\"),a=require(\"input-text\"),f=require(\"input-file\"),p=require(\"input-date\");t.exports=function(r){var t=e.div();return r.forEach(function(n,e){Array.isArray(n)||(console.error(\"Element #\"+e+\" should be an array!\"),console.info(\"[app.perform-actions] child=...\",n),console.info(\"[app.perform-actions] children=...\",r));var i=n[0],o=s[i];if(!o)throw\"Unknonw type `\"+i+\"`!\";var u=o.apply(t,n.slice(1));return\"string\"==typeof u?void(location.hash=\"#\"+u):void(u&&t.appendChild(u))}),t};var s={text:function(r){var t=e.tag(\"p\");return t.innerHTML=n(r),t},button:function(r){var t=e.tag(\"a\",\"button\");return e.on(t,function(){var t=n(r.action);\"string\"==typeof t&&t.length>0&&(location.hash=\"#\"+t)}),t.innerHTML=n(r.text),t},nurse:function(r){var t=e.div(),i=o.appendTo(\"nurse\",t);return i.text.innerHTML=n(r),t},reset:function(r){i.reset();var t,n;for(t in r)n=r[t],i.set(t,n)},set:function(r){var t,n;for(t in r)n=r[t],i.set(t,n)},\"input-bool\":function(r){return u(r)},\"input-text\":function(r){return a(r)},\"input-file\":function(r){return f(r)},\"input-date\":function(r){return p(r)},loop:function(r,o){var u=n(r.list),a=n(r.item),f=n(r.sort),p=i.get(u);Array.isArray(p)||(p=[p]),\"string\"==typeof f&&f.trim().length>0&&(f=[f]),Array.isArray(f)&&p.sort(function(r,t){var n,e;for(n=0;n<f.length;n++){if(e=f[n],r[e]<t[e])return-1;if(r[e]>t[e])return 1}return 0}),\"function\"==typeof r.filter&&(p=p.filter(r.filter));var s=e.div();return p.forEach(function(r){i.set(a,r),s.appendChild(t.exports(o))}),s}}});\n//# sourceMappingURL=app.perform-actions.js.map","map":{"version":3,"file":"app.perform-actions.js.map","sources":["app.perform-actions.js"],"sourcesContent":["require( 'app.perform-actions', function(exports, module) {  /**********************************************************************\n require( 'app.perform-actions' )\n -----------------------------------------------------------------------\n \n **********************************************************************/\nvar $ = require(\"dom\");\nvar Data = require('data');\nvar Tpl = require(\"x-template\");\nvar InputBool = require(\"input-boolean\");\nvar InputText = require(\"input-text\");\nvar InputFile = require(\"input-file\");\nvar InputDate = require(\"input-date\");\n\n\nmodule.exports = function( children ) {\n    var body = $.div();\n\n    children.forEach(function ( child, idx ) {\n        if( !Array.isArray( child ) ) {\n            console.error( \"Element #\" + idx + \" should be an array!\" );\n            console.info(\"[app.perform-actions] child=...\", child);\n            console.info(\"[app.perform-actions] children=...\", children);\n        }\n        var actionID = child[0];\n        var action = actions[actionID];\n        if( action ) {\n            var element = action.apply( body, child.slice( 1 ) );\n            if( typeof element === 'string' ) {\n                location.hash = '#' + element;\n                return;\n            }\n            if( element ) body.appendChild( element );\n        } else {\n            throw \"Unknonw type `\" + actionID + \"`!\";\n        }\n    });\n\n    return body;\n};\n\n\nvar actions = {\n    text: function( args ) {\n        var div = $.tag( 'p' );\n        div.innerHTML = parse( args );\n        return div;\n    },\n    button: function( args ) {\n        var btn = $.tag( 'a', 'button' );\n        $.on( btn, function() {\n            var target = parse( args.action );\n            if( typeof target === 'string' && target.length > 0 ) {\n                location.hash = \"#\" + target;\n            }\n        });\n        btn.innerHTML = parse( args.text );\n        return btn;\n    },\n    nurse: function( args ) {\n        var content = $.div();\n        var children = Tpl.appendTo( \"nurse\", content );\n        children.text.innerHTML = parse( args );\n        return content;\n    },\n    reset: function( args ) {\n        Data.reset();\n        var key, val;\n        for( key in args ) {\n            val = args[key];\n            Data.set( key, val );\n        }\n    },\n    set: function( args ) {\n        var key, val;\n        for( key in args ) {\n            val = args[key];\n            Data.set( key, val );\n        }\n    },\n    \"input-bool\": function( args ) {\n        return InputBool( args );\n    },\n    \"input-text\": function( args ) {\n        return InputText( args );\n    },\n    \"input-file\": function( args ) {\n        return InputFile( args );\n    },\n    \"input-date\": function( args ) {\n        return InputDate( args );\n    },\n    loop: function( args, children ) {\n        var list = parse( args.list );\n        var item = parse( args.item );\n        var sort = parse( args.sort );\n        \n        var arr = Data.get( list );\n        if( !Array.isArray( arr ) ) arr = [arr];\n\n        // Sorting.\n        if( typeof sort === 'string' && sort.trim().length > 0 ) {\n            sort = [sort];\n        }\n        if( Array.isArray( sort ) ) {\n            arr.sort(function( a, b ) {\n                var i, att;\n                for (i = 0 ; i < sort.length ; i++) {\n                    att = sort[i];\n                    if( a[att] < b[att] ) return -1;\n                    if( a[att] > b[att] ) return 1;\n                }\n                return 0;\n            });\n        }\n\n        // Filtering.\n        if( typeof args.filter === 'function' ) {\n            arr = arr.filter( args.filter );\n        }\n\n        var content = $.div();\n        arr.forEach(function ( child ) {\n            Data.set( item, child );\n            content.appendChild( module.exports( children ) );\n        });\n\n        return content;\n    }\n};\n\n\nfunction parse( input ) {\n    if( Array.isArray( input ) ) {\n        var i, item, result;\n        for (i = 0 ; i < input.length ; i++) {\n            item = input[i];\n            result = parse( item );\n            if( typeof result !== 'undefined' && result !== 'null' ) return result;\n        }\n    }\n    else if( typeof input === 'function' ) {\n        return parse( input.call( Data ) );\n    }\n    else if( typeof input === 'string' ) {\n        var cursor = 0;\n        var posStart;\n        var posEnd;\n        var output = '';\n        while( true ) {\n            posStart = input.indexOf( '{{', cursor );\n            if( posStart == -1 ) break;\n            output += input.substr( cursor, posStart - cursor );\n            cursor = posStart + 2;\n            posEnd = input.indexOf( '}}', cursor );\n            if( posEnd == -1 ) break;\n            output += Data.get( input.substr( cursor, posEnd - cursor ).trim() );\n            cursor = posEnd + 2;\n        }\n        return output + input.substr( cursor );\n    }\n\n    return undefined;\n}\n });\n"],"names":["require","exports","module","parse","input","Array","isArray","i","item","result","length","call","Data","posStart","posEnd","cursor","output","indexOf","substr","get","trim","$","Tpl","InputBool","InputText","InputFile","InputDate","children","body","div","forEach","child","idx","console","error","info","actionID","action","actions","element","apply","slice","location","hash","appendChild","text","args","tag","innerHTML","button","btn","on","target","nurse","content","appendTo","reset","key","val","set","input-bool","input-text","input-file","input-date","loop","list","sort","arr","a","b","att","filter"],"mappings":"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"},"dependencies":["mod/app.perform-actions","mod/dom","mod/data","mod/x-template","mod/input-boolean","mod/input-text","mod/input-file","mod/input-date"]}