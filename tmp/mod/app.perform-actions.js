{"intl":"","src":"require( 'app.perform-actions', function(exports, module) {  /**********************************************************************\r\n require( 'app.perform-actions' )\r\n -----------------------------------------------------------------------\r\n \r\n **********************************************************************/\r\nvar $ = require(\"dom\");\r\nvar Data = require('data');\r\nvar Tpl = require(\"x-template\");\r\nvar InputBool = require(\"input-boolean\");\r\nvar InputText = require(\"input-text\");\r\nvar InputFile = require(\"input-file\");\r\nvar InputDate = require(\"input-date\");\r\n\r\n\r\nmodule.exports = function( children ) {\r\n    var body = $.div();\r\n\r\n    children.forEach(function ( child, idx ) {\r\n        if( !Array.isArray( child ) ) {\r\n            console.error( \"Element #\" + idx + \" should be an array!\" );\r\n            console.info(\"[app.perform-actions] child=...\", child);\r\n            console.info(\"[app.perform-actions] children=...\", children);\r\n        }\r\n        var actionID = child[0];\r\n        var action = actions[actionID];\r\n        if( action ) {\r\n            var element = action.apply( body, child.slice( 1 ) );\r\n            if( typeof element === 'string' ) {\r\n                location.hash = '#' + element;\r\n                return;\r\n            }\r\n            if( element ) body.appendChild( element );\r\n        } else {\r\n            throw \"Unknonw type `\" + actionID + \"`!\";\r\n        }\r\n    });\r\n\r\n    return body;\r\n};\r\n\r\n\r\nvar actions = {\r\n    text: function( args ) {\r\n        var div = $.tag( 'p' );\r\n        div.innerHTML = parse( args );\r\n        return div;\r\n    },\r\n    button: function( args ) {\r\n        var btn = $.tag( 'a', args.style || 'button' );\r\n        var context = {};\r\n        if( args.freeze ) {\r\n            if( !Array.isArray( args.freeze ) ) {\r\n                args.freeze = [args.freeze];\r\n            }\r\n            args.freeze.forEach(function ( name ) {\r\n                context[name] = Data.get( name );\r\n            });\r\n\r\n        }\r\n        $.on( btn, function() {\r\n            var target = parse( args.action, context );\r\n            if( typeof target === 'string' && target.length > 0 ) {\r\n                location.hash = \"#\" + target;\r\n            }\r\n        });\r\n        btn.innerHTML = parse( args.text );\r\n        return btn;\r\n    },\r\n    nurse: function( args ) {\r\n        var content = $.div();\r\n        var children = Tpl.appendTo( \"nurse\", content );\r\n        children.text.innerHTML = parse( args );\r\n        return content;\r\n    },\r\n    reset: function( args ) {\r\n        Data.reset();\r\n        var key, val;\r\n        for( key in args ) {\r\n            val = args[key];\r\n            Data.set( key, val );\r\n        }\r\n    },\r\n    set: function( args ) {\r\n        var key, val;\r\n        for( key in args ) {\r\n            val = args[key];\r\n            Data.set( key, val );\r\n        }\r\n    },\r\n    \"input-bool\": function( args ) {\r\n        return InputBool( args );\r\n    },\r\n    \"input-text\": function( args ) {\r\n        return InputText( args );\r\n    },\r\n    \"input-file\": function( args ) {\r\n        return InputFile( args );\r\n    },\r\n    \"input-date\": function( args ) {\r\n        return InputDate( args );\r\n    },\r\n    loop: function( args, children ) {\r\n        var list = parse( args.list );\r\n        var item = parse( args.item );\r\n        var sort = parse( args.sort );\r\n        \r\n        var arr = Data.get( list );\r\n        if( !Array.isArray( arr ) ) arr = [arr];\r\n\r\n        // Sorting.\r\n        if( typeof sort === 'string' && sort.trim().length > 0 ) {\r\n            sort = [sort];\r\n        }\r\n        if( Array.isArray( sort ) ) {\r\n            arr.sort(function( a, b ) {\r\n                var i, att;\r\n                for (i = 0 ; i < sort.length ; i++) {\r\n                    att = sort[i];\r\n                    if( a[att] < b[att] ) return -1;\r\n                    if( a[att] > b[att] ) return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        // Filtering.\r\n        if( typeof args.filter === 'function' ) {\r\n            arr = arr.filter( args.filter );\r\n        }\r\n\r\n        var content = $.div();\r\n        arr.forEach(function ( child ) {\r\n            Data.set( item, child );\r\n            content.appendChild( module.exports( children ) );\r\n        });\r\n\r\n        return content;\r\n    }\r\n};\r\n\r\n\r\nfunction parse( input, context ) {\r\n    return Data.parse( input, context );\r\n}\r\n\r\n });\r\n","zip":"require(\"app.perform-actions\",function(r,e){function n(r,e){return i.parse(r,e)}var t=require(\"dom\"),i=require(\"data\"),o=require(\"x-template\"),u=require(\"input-boolean\"),a=require(\"input-text\"),f=require(\"input-file\"),p=require(\"input-date\");e.exports=function(r){var e=t.div();return r.forEach(function(n,t){Array.isArray(n)||(console.error(\"Element #\"+t+\" should be an array!\"),console.info(\"[app.perform-actions] child=...\",n),console.info(\"[app.perform-actions] children=...\",r));var i=n[0],o=c[i];if(!o)throw\"Unknonw type `\"+i+\"`!\";var u=o.apply(e,n.slice(1));return\"string\"==typeof u?void(location.hash=\"#\"+u):void(u&&e.appendChild(u))}),e};var c={text:function(r){var e=t.tag(\"p\");return e.innerHTML=n(r),e},button:function(r){var e=t.tag(\"a\",r.style||\"button\"),o={};return r.freeze&&(Array.isArray(r.freeze)||(r.freeze=[r.freeze]),r.freeze.forEach(function(r){o[r]=i.get(r)})),t.on(e,function(){var e=n(r.action,o);\"string\"==typeof e&&e.length>0&&(location.hash=\"#\"+e)}),e.innerHTML=n(r.text),e},nurse:function(r){var e=t.div(),i=o.appendTo(\"nurse\",e);return i.text.innerHTML=n(r),e},reset:function(r){i.reset();var e,n;for(e in r)n=r[e],i.set(e,n)},set:function(r){var e,n;for(e in r)n=r[e],i.set(e,n)},\"input-bool\":function(r){return u(r)},\"input-text\":function(r){return a(r)},\"input-file\":function(r){return f(r)},\"input-date\":function(r){return p(r)},loop:function(r,o){var u=n(r.list),a=n(r.item),f=n(r.sort),p=i.get(u);Array.isArray(p)||(p=[p]),\"string\"==typeof f&&f.trim().length>0&&(f=[f]),Array.isArray(f)&&p.sort(function(r,e){var n,t;for(n=0;n<f.length;n++){if(t=f[n],r[t]<e[t])return-1;if(r[t]>e[t])return 1}return 0}),\"function\"==typeof r.filter&&(p=p.filter(r.filter));var c=t.div();return p.forEach(function(r){i.set(a,r),c.appendChild(e.exports(o))}),c}}});\n//# sourceMappingURL=app.perform-actions.js.map","map":{"version":3,"file":"app.perform-actions.js.map","sources":["app.perform-actions.js"],"sourcesContent":["require( 'app.perform-actions', function(exports, module) {  /**********************************************************************\r\n require( 'app.perform-actions' )\r\n -----------------------------------------------------------------------\r\n \r\n **********************************************************************/\r\nvar $ = require(\"dom\");\r\nvar Data = require('data');\r\nvar Tpl = require(\"x-template\");\r\nvar InputBool = require(\"input-boolean\");\r\nvar InputText = require(\"input-text\");\r\nvar InputFile = require(\"input-file\");\r\nvar InputDate = require(\"input-date\");\r\n\r\n\r\nmodule.exports = function( children ) {\r\n    var body = $.div();\r\n\r\n    children.forEach(function ( child, idx ) {\r\n        if( !Array.isArray( child ) ) {\r\n            console.error( \"Element #\" + idx + \" should be an array!\" );\r\n            console.info(\"[app.perform-actions] child=...\", child);\r\n            console.info(\"[app.perform-actions] children=...\", children);\r\n        }\r\n        var actionID = child[0];\r\n        var action = actions[actionID];\r\n        if( action ) {\r\n            var element = action.apply( body, child.slice( 1 ) );\r\n            if( typeof element === 'string' ) {\r\n                location.hash = '#' + element;\r\n                return;\r\n            }\r\n            if( element ) body.appendChild( element );\r\n        } else {\r\n            throw \"Unknonw type `\" + actionID + \"`!\";\r\n        }\r\n    });\r\n\r\n    return body;\r\n};\r\n\r\n\r\nvar actions = {\r\n    text: function( args ) {\r\n        var div = $.tag( 'p' );\r\n        div.innerHTML = parse( args );\r\n        return div;\r\n    },\r\n    button: function( args ) {\r\n        var btn = $.tag( 'a', args.style || 'button' );\r\n        var context = {};\r\n        if( args.freeze ) {\r\n            if( !Array.isArray( args.freeze ) ) {\r\n                args.freeze = [args.freeze];\r\n            }\r\n            args.freeze.forEach(function ( name ) {\r\n                context[name] = Data.get( name );\r\n            });\r\n\r\n        }\r\n        $.on( btn, function() {\r\n            var target = parse( args.action, context );\r\n            if( typeof target === 'string' && target.length > 0 ) {\r\n                location.hash = \"#\" + target;\r\n            }\r\n        });\r\n        btn.innerHTML = parse( args.text );\r\n        return btn;\r\n    },\r\n    nurse: function( args ) {\r\n        var content = $.div();\r\n        var children = Tpl.appendTo( \"nurse\", content );\r\n        children.text.innerHTML = parse( args );\r\n        return content;\r\n    },\r\n    reset: function( args ) {\r\n        Data.reset();\r\n        var key, val;\r\n        for( key in args ) {\r\n            val = args[key];\r\n            Data.set( key, val );\r\n        }\r\n    },\r\n    set: function( args ) {\r\n        var key, val;\r\n        for( key in args ) {\r\n            val = args[key];\r\n            Data.set( key, val );\r\n        }\r\n    },\r\n    \"input-bool\": function( args ) {\r\n        return InputBool( args );\r\n    },\r\n    \"input-text\": function( args ) {\r\n        return InputText( args );\r\n    },\r\n    \"input-file\": function( args ) {\r\n        return InputFile( args );\r\n    },\r\n    \"input-date\": function( args ) {\r\n        return InputDate( args );\r\n    },\r\n    loop: function( args, children ) {\r\n        var list = parse( args.list );\r\n        var item = parse( args.item );\r\n        var sort = parse( args.sort );\r\n        \r\n        var arr = Data.get( list );\r\n        if( !Array.isArray( arr ) ) arr = [arr];\r\n\r\n        // Sorting.\r\n        if( typeof sort === 'string' && sort.trim().length > 0 ) {\r\n            sort = [sort];\r\n        }\r\n        if( Array.isArray( sort ) ) {\r\n            arr.sort(function( a, b ) {\r\n                var i, att;\r\n                for (i = 0 ; i < sort.length ; i++) {\r\n                    att = sort[i];\r\n                    if( a[att] < b[att] ) return -1;\r\n                    if( a[att] > b[att] ) return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        // Filtering.\r\n        if( typeof args.filter === 'function' ) {\r\n            arr = arr.filter( args.filter );\r\n        }\r\n\r\n        var content = $.div();\r\n        arr.forEach(function ( child ) {\r\n            Data.set( item, child );\r\n            content.appendChild( module.exports( children ) );\r\n        });\r\n\r\n        return content;\r\n    }\r\n};\r\n\r\n\r\nfunction parse( input, context ) {\r\n    return Data.parse( input, context );\r\n}\r\n\r\n });\r\n"],"names":["require","exports","module","parse","input","context","Data","$","Tpl","InputBool","InputText","InputFile","InputDate","children","body","div","forEach","child","idx","Array","isArray","console","error","info","actionID","action","actions","element","apply","slice","location","hash","appendChild","text","args","tag","innerHTML","button","btn","style","freeze","name","get","on","target","length","nurse","content","appendTo","reset","key","val","set","input-bool","input-text","input-file","input-date","loop","list","item","sort","arr","trim","a","b","i","att","filter"],"mappings":"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"},"dependencies":["mod/app.perform-actions","mod/dom","mod/data","mod/x-template","mod/input-boolean","mod/input-text","mod/input-file","mod/input-date"]}