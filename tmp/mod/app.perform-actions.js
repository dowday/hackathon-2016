{"intl":"","src":"require( 'app.perform-actions', function(exports, module) {  /**********************************************************************\r\n require( 'app.perform-actions' )\r\n -----------------------------------------------------------------------\r\n\r\n **********************************************************************/\r\nvar $ = require(\"dom\");\r\nvar Data = require('data');\r\nvar Tpl = require(\"x-template\");\r\nvar InputBool = require(\"input-boolean\");\r\nvar InputText = require(\"input-text\");\r\nvar InputFile = require(\"input-file\");\r\nvar InputDate = require(\"input-date\");\r\n\r\n\r\nmodule.exports = function( children ) {\r\n    var body = $.div();\r\n\r\n    try {\r\n        if( typeof children === 'undefined' ) {\r\n            throw( \"children is undefined! But it must be an Array.\" );\r\n        }\r\n        children.forEach(function ( child, idx ) {\r\n            try {\r\n                if( !Array.isArray( child ) ) {\r\n                    throw( \"Element #\" + idx + \" should be an array!\" );\r\n                }\r\n                var actionID = child[0];\r\n                var action = actions[actionID];\r\n                if( action ) {\r\n                    var element = action.apply( body, child.slice( 1 ) );\r\n                    if( typeof element === 'string' ) {\r\n                        location.hash = '#' + element;\r\n                        return;\r\n                    }\r\n                    if( element ) body.appendChild( element );\r\n                } else {\r\n                    throw \"Unknonw type `\" + actionID + \"`!\";\r\n                }\r\n            }\r\n            catch( ex ) {\r\n                console.error( \"Exception: \", ex );\r\n                console.error( \"Child #\" + idx, child );\r\n                throw( null );\r\n            }\r\n        }, this);\r\n    }\r\n    catch( ex ) {\r\n        if( ex !== null ) {\r\n            console.error( \"Exception: \", ex );\r\n        }\r\n        console.error( \"Error in: \", children );\r\n        throw( ex );\r\n    }\r\n    return body;\r\n};\r\n\r\n\r\nvar actions = {\r\n    text: function( args ) {\r\n        var div = $.tag( 'p' );\r\n        div.innerHTML = parse( args );\r\n        return div;\r\n    },\r\n    button: function( args ) {\r\n        var btn = $.tag( 'a', args.style || 'button' );\r\n        var context = {};\r\n        if( args.freeze ) {\r\n            if( !Array.isArray( args.freeze ) ) {\r\n                args.freeze = [args.freeze];\r\n            }\r\n            args.freeze.forEach(function ( name ) {\r\n                context[name] = Data.get( name );\r\n            });\r\n\r\n        }\r\n        $.on( btn, function() {\r\n            var target = parse( args.action, context );\r\n            if( typeof target === 'string' && target.length > 0 ) {\r\n                location.hash = \"#\" + target;\r\n            }\r\n        });\r\n        btn.innerHTML = parse( args.text );\r\n        return btn;\r\n    },\r\n    nurse: function( args ) {\r\n        var content = $.div();\r\n        var children = Tpl.appendTo( \"nurse\", content );\r\n        children.text.innerHTML = parse( args );\r\n        return content;\r\n    },\r\n    reset: function( args ) {\r\n        Data.reset();\r\n        var key, val;\r\n        for( key in args ) {\r\n            val = args[key];\r\n            Data.set( key, val );\r\n        }\r\n    },\r\n    set: function( args ) {\r\n        var key, val;\r\n        for( key in args ) {\r\n            val = args[key];\r\n            Data.set( key, parse( val ) );\r\n        }\r\n    },\r\n    \"input-bool\": function( args ) {\r\n        return InputBool( args );\r\n    },\r\n    \"input-text\": function( args ) {\r\n        return InputText( args );\r\n    },\r\n    \"input-file\": function( args ) {\r\n        return InputFile( args );\r\n    },\r\n    \"input-date\": function( args ) {\r\n        return InputDate( args );\r\n    },\r\n    row: function( args ) {\r\n        var tbl = $.div( 'tbl' );\r\n        if( !Array.isArray( args ) ) args = [args];\r\n        args.forEach(function ( arg ) {\r\n            var body = module.exports( [arg] );\r\n            $.add( tbl, $.div([ body ], {\r\n                style: \"width:\" + (100 / args.length) + \"%\"\r\n            }));            \r\n        });\r\n        return tbl;\r\n    },\r\n    loop: function( args, children ) {\r\n        var list = parse( args.list );\r\n        var item = parse( args.item );\r\n        var sort = parse( args.sort );\r\n\r\n        var arr = Data.get( list );\r\n        if( !Array.isArray( arr ) ) arr = [arr];\r\n\r\n        // Sorting.\r\n        if( typeof sort === 'string' && sort.trim().length > 0 ) {\r\n            sort = [sort];\r\n        }\r\n        if( Array.isArray( sort ) ) {\r\n            arr.sort(function( a, b ) {\r\n                var i, att;\r\n                for (i = 0 ; i < sort.length ; i++) {\r\n                    att = sort[i];\r\n                    if( a[att] < b[att] ) return -1;\r\n                    if( a[att] > b[att] ) return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        // Filtering.\r\n        if( typeof args.filter === 'function' ) {\r\n            arr = arr.filter( args.filter );\r\n        }\r\n\r\n        var content = $.div();\r\n        arr.forEach(function ( child ) {\r\n            Data.set( item, child );\r\n            content.appendChild( module.exports( children ) );\r\n        });\r\n\r\n        return content;\r\n    }\r\n};\r\n\r\n\r\nfunction parse( input, context ) {\r\n    return Data.parse( input, context );\r\n}\r\n });\r\n","zip":"require(\"app.perform-actions\",function(r,t){function e(r,t){return i.parse(r,t)}var n=require(\"dom\"),i=require(\"data\"),o=require(\"x-template\"),u=require(\"input-boolean\"),a=require(\"input-text\"),f=require(\"input-file\"),c=require(\"input-date\");t.exports=function(r){var t=n.div();try{if(\"undefined\"==typeof r)throw\"children is undefined! But it must be an Array.\";r.forEach(function(r,e){try{if(!Array.isArray(r))throw\"Element #\"+e+\" should be an array!\";var n=r[0],i=s[n];if(!i)throw\"Unknonw type `\"+n+\"`!\";var o=i.apply(t,r.slice(1));if(\"string\"==typeof o)return void(location.hash=\"#\"+o);o&&t.appendChild(o)}catch(u){throw console.error(\"Exception: \",u),console.error(\"Child #\"+e,r),null}},this)}catch(e){throw null!==e&&console.error(\"Exception: \",e),console.error(\"Error in: \",r),e}return t};var s={text:function(r){var t=n.tag(\"p\");return t.innerHTML=e(r),t},button:function(r){var t=n.tag(\"a\",r.style||\"button\"),o={};return r.freeze&&(Array.isArray(r.freeze)||(r.freeze=[r.freeze]),r.freeze.forEach(function(r){o[r]=i.get(r)})),n.on(t,function(){var t=e(r.action,o);\"string\"==typeof t&&t.length>0&&(location.hash=\"#\"+t)}),t.innerHTML=e(r.text),t},nurse:function(r){var t=n.div(),i=o.appendTo(\"nurse\",t);return i.text.innerHTML=e(r),t},reset:function(r){i.reset();var t,e;for(t in r)e=r[t],i.set(t,e)},set:function(r){var t,n;for(t in r)n=r[t],i.set(t,e(n))},\"input-bool\":function(r){return u(r)},\"input-text\":function(r){return a(r)},\"input-file\":function(r){return f(r)},\"input-date\":function(r){return c(r)},row:function(r){var e=n.div(\"tbl\");return Array.isArray(r)||(r=[r]),r.forEach(function(i){var o=t.exports([i]);n.add(e,n.div([o],{style:\"width:\"+100/r.length+\"%\"}))}),e},loop:function(r,o){var u=e(r.list),a=e(r.item),f=e(r.sort),c=i.get(u);Array.isArray(c)||(c=[c]),\"string\"==typeof f&&f.trim().length>0&&(f=[f]),Array.isArray(f)&&c.sort(function(r,t){var e,n;for(e=0;e<f.length;e++){if(n=f[e],r[n]<t[n])return-1;if(r[n]>t[n])return 1}return 0}),\"function\"==typeof r.filter&&(c=c.filter(r.filter));var s=n.div();return c.forEach(function(r){i.set(a,r),s.appendChild(t.exports(o))}),s}}});\n//# sourceMappingURL=app.perform-actions.js.map","map":{"version":3,"file":"app.perform-actions.js.map","sources":["app.perform-actions.js"],"sourcesContent":["require( 'app.perform-actions', function(exports, module) {  /**********************************************************************\r\n require( 'app.perform-actions' )\r\n -----------------------------------------------------------------------\r\n\r\n **********************************************************************/\r\nvar $ = require(\"dom\");\r\nvar Data = require('data');\r\nvar Tpl = require(\"x-template\");\r\nvar InputBool = require(\"input-boolean\");\r\nvar InputText = require(\"input-text\");\r\nvar InputFile = require(\"input-file\");\r\nvar InputDate = require(\"input-date\");\r\n\r\n\r\nmodule.exports = function( children ) {\r\n    var body = $.div();\r\n\r\n    try {\r\n        if( typeof children === 'undefined' ) {\r\n            throw( \"children is undefined! But it must be an Array.\" );\r\n        }\r\n        children.forEach(function ( child, idx ) {\r\n            try {\r\n                if( !Array.isArray( child ) ) {\r\n                    throw( \"Element #\" + idx + \" should be an array!\" );\r\n                }\r\n                var actionID = child[0];\r\n                var action = actions[actionID];\r\n                if( action ) {\r\n                    var element = action.apply( body, child.slice( 1 ) );\r\n                    if( typeof element === 'string' ) {\r\n                        location.hash = '#' + element;\r\n                        return;\r\n                    }\r\n                    if( element ) body.appendChild( element );\r\n                } else {\r\n                    throw \"Unknonw type `\" + actionID + \"`!\";\r\n                }\r\n            }\r\n            catch( ex ) {\r\n                console.error( \"Exception: \", ex );\r\n                console.error( \"Child #\" + idx, child );\r\n                throw( null );\r\n            }\r\n        }, this);\r\n    }\r\n    catch( ex ) {\r\n        if( ex !== null ) {\r\n            console.error( \"Exception: \", ex );\r\n        }\r\n        console.error( \"Error in: \", children );\r\n        throw( ex );\r\n    }\r\n    return body;\r\n};\r\n\r\n\r\nvar actions = {\r\n    text: function( args ) {\r\n        var div = $.tag( 'p' );\r\n        div.innerHTML = parse( args );\r\n        return div;\r\n    },\r\n    button: function( args ) {\r\n        var btn = $.tag( 'a', args.style || 'button' );\r\n        var context = {};\r\n        if( args.freeze ) {\r\n            if( !Array.isArray( args.freeze ) ) {\r\n                args.freeze = [args.freeze];\r\n            }\r\n            args.freeze.forEach(function ( name ) {\r\n                context[name] = Data.get( name );\r\n            });\r\n\r\n        }\r\n        $.on( btn, function() {\r\n            var target = parse( args.action, context );\r\n            if( typeof target === 'string' && target.length > 0 ) {\r\n                location.hash = \"#\" + target;\r\n            }\r\n        });\r\n        btn.innerHTML = parse( args.text );\r\n        return btn;\r\n    },\r\n    nurse: function( args ) {\r\n        var content = $.div();\r\n        var children = Tpl.appendTo( \"nurse\", content );\r\n        children.text.innerHTML = parse( args );\r\n        return content;\r\n    },\r\n    reset: function( args ) {\r\n        Data.reset();\r\n        var key, val;\r\n        for( key in args ) {\r\n            val = args[key];\r\n            Data.set( key, val );\r\n        }\r\n    },\r\n    set: function( args ) {\r\n        var key, val;\r\n        for( key in args ) {\r\n            val = args[key];\r\n            Data.set( key, parse( val ) );\r\n        }\r\n    },\r\n    \"input-bool\": function( args ) {\r\n        return InputBool( args );\r\n    },\r\n    \"input-text\": function( args ) {\r\n        return InputText( args );\r\n    },\r\n    \"input-file\": function( args ) {\r\n        return InputFile( args );\r\n    },\r\n    \"input-date\": function( args ) {\r\n        return InputDate( args );\r\n    },\r\n    row: function( args ) {\r\n        var tbl = $.div( 'tbl' );\r\n        if( !Array.isArray( args ) ) args = [args];\r\n        args.forEach(function ( arg ) {\r\n            var body = module.exports( [arg] );\r\n            $.add( tbl, $.div([ body ], {\r\n                style: \"width:\" + (100 / args.length) + \"%\"\r\n            }));            \r\n        });\r\n        return tbl;\r\n    },\r\n    loop: function( args, children ) {\r\n        var list = parse( args.list );\r\n        var item = parse( args.item );\r\n        var sort = parse( args.sort );\r\n\r\n        var arr = Data.get( list );\r\n        if( !Array.isArray( arr ) ) arr = [arr];\r\n\r\n        // Sorting.\r\n        if( typeof sort === 'string' && sort.trim().length > 0 ) {\r\n            sort = [sort];\r\n        }\r\n        if( Array.isArray( sort ) ) {\r\n            arr.sort(function( a, b ) {\r\n                var i, att;\r\n                for (i = 0 ; i < sort.length ; i++) {\r\n                    att = sort[i];\r\n                    if( a[att] < b[att] ) return -1;\r\n                    if( a[att] > b[att] ) return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        // Filtering.\r\n        if( typeof args.filter === 'function' ) {\r\n            arr = arr.filter( args.filter );\r\n        }\r\n\r\n        var content = $.div();\r\n        arr.forEach(function ( child ) {\r\n            Data.set( item, child );\r\n            content.appendChild( module.exports( children ) );\r\n        });\r\n\r\n        return content;\r\n    }\r\n};\r\n\r\n\r\nfunction parse( input, context ) {\r\n    return Data.parse( input, context );\r\n}\r\n });\r\n"],"names":["require","exports","module","parse","input","context","Data","$","Tpl","InputBool","InputText","InputFile","InputDate","children","body","div","forEach","child","idx","Array","isArray","actionID","action","actions","element","apply","slice","location","hash","appendChild","ex","console","error","this","text","args","tag","innerHTML","button","btn","style","freeze","name","get","on","target","length","nurse","content","appendTo","reset","key","val","set","input-bool","input-text","input-file","input-date","row","tbl","arg","add","loop","list","item","sort","arr","trim","a","b","i","att","filter"],"mappings":"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"},"dependencies":["mod/app.perform-actions","mod/dom","mod/data","mod/x-template","mod/input-boolean","mod/input-text","mod/input-file","mod/input-date"]}